name: "Deploy Application to Azure"

permissions:
  contents: read   # Required for checkout
  id-token: write  # Required for Azure login
  packages: write  # Required for pushing to GHCR

on:
  workflow_dispatch:
    inputs:
      ref:
        description: 'The branch, tag or SHA to deploy (e.g., main, v1.0.0)'
        required: true
        type: string
      environment:
        description: 'Environment to deploy to (dev, test, prod)'
        required: false
        default: 'test'
        type: choice
        options:
          - dev
          - test
          - prod
  workflow_call:
    inputs:
      ref:
        description: 'The branch, tag or SHA to deploy (e.g., main, v1.0.0)'
        required: false
        type: string
      environment:
        description: 'Environment to deploy to (dev, test, prod)'
        required: false
        default: 'test'
        type: string
    secrets:
      AZURE_CREDENTIALS:
        description: 'Azure credentials for authentication'
        required: false

env:
  # Environment-specific resource names
  AZURE_WEBAPP_NAME_DEV: konveyor-dev-app
  AZURE_WEBAPP_NAME_TEST: konveyor-test-app
  AZURE_WEBAPP_NAME_PROD: konveyor-prod-app
  AZURE_RESOURCE_GROUP_DEV: konveyor-dev-rg
  AZURE_RESOURCE_GROUP_TEST: konveyor-test-rg
  AZURE_RESOURCE_GROUP_PROD: konveyor-prod-rg
  # Default to test environment if not specified
  ENVIRONMENT: test
  AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
  # Default image tag if not set elsewhere
  IMAGE_TAG: latest

jobs:
  build-and-deploy:
    name: Deploy Application to Azure (${{ inputs.environment || github.event.inputs.environment || 'test' }})
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (push/tag)
        if: github.event_name == 'push' && github.ref_type == 'tag'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}

      - name: Checkout repository (workflow_dispatch)
        if: github.event_name == 'workflow_dispatch'
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.ref }}

      - name: Checkout repository (workflow_call)
        if: github.event_name == 'workflow_call'
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Log in to GitHub Container Registry (GHCR)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Set Image Tag
        run: |
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref_type }}" == "tag" ]; then
            echo "IMAGE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "IMAGE_TAG=${{ github.event.inputs.ref }}" >> $GITHUB_ENV
          elif [ "${{ github.event_name }}" == "workflow_call" ]; then
            echo "IMAGE_TAG=${{ inputs.ref || 'latest' }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=latest" >> $GITHUB_ENV
          fi
          echo "Using IMAGE_TAG: ${{ env.IMAGE_TAG }}"

      - name: Build Docker image
        timeout-minutes: 25
        run: |
          docker build -t ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to GHCR
        timeout-minutes: 25
        run: |
          docker push ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}

      - name: Azure Login
        timeout-minutes: 25
        uses: azure/login@v2.1.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set environment-specific variables
      - name: Set environment variables
        run: |
          # Determine environment from workflow input or default
          ENV="${{ inputs.environment || github.event.inputs.environment || env.ENVIRONMENT }}"
          echo "Using environment: $ENV"

          # Set the appropriate webapp name and resource group based on environment
          if [[ "$ENV" == "dev" ]]; then
            echo "AZURE_WEBAPP_NAME=${{ env.AZURE_WEBAPP_NAME_DEV }}" >> $GITHUB_ENV
            echo "AZURE_RESOURCE_GROUP=${{ env.AZURE_RESOURCE_GROUP_DEV }}" >> $GITHUB_ENV
          elif [[ "$ENV" == "test" ]]; then
            echo "AZURE_WEBAPP_NAME=${{ env.AZURE_WEBAPP_NAME_TEST }}" >> $GITHUB_ENV
            echo "AZURE_RESOURCE_GROUP=${{ env.AZURE_RESOURCE_GROUP_TEST }}" >> $GITHUB_ENV
          elif [[ "$ENV" == "prod" ]]; then
            echo "AZURE_WEBAPP_NAME=${{ env.AZURE_WEBAPP_NAME_PROD }}" >> $GITHUB_ENV
            echo "AZURE_RESOURCE_GROUP=${{ env.AZURE_RESOURCE_GROUP_PROD }}" >> $GITHUB_ENV
          else
            # Default to test environment
            echo "AZURE_WEBAPP_NAME=${{ env.AZURE_WEBAPP_NAME_TEST }}" >> $GITHUB_ENV
            echo "AZURE_RESOURCE_GROUP=${{ env.AZURE_RESOURCE_GROUP_TEST }}" >> $GITHUB_ENV
          fi

          echo "Will deploy to app: ${{ env.AZURE_WEBAPP_NAME }} in resource group: ${{ env.AZURE_RESOURCE_GROUP }}"

      - name: Deploy to Azure Web App (using GHCR image)
        timeout-minutes: 25
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          resource-group-name: ${{ env.AZURE_RESOURCE_GROUP }}
          images: ghcr.io/${{ github.repository }}:${{ env.IMAGE_TAG }}
